name: Build Android APK

# Trigger the workflow on push to main branch and pull requests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # Allow manual trigger from Actions tab
  workflow_dispatch:

# Set permissions for the workflow
permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Java Development Kit
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    # Setup Android SDK
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 11076708
        build-tools-version: 34.0.0
        platform: 34
        
    # Verify Android SDK installation
    - name: Verify Android SDK
      run: |
        echo "=== Android SDK Verification ==="
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
        ls -la $ANDROID_HOME/platforms/
        ls -la $ANDROID_HOME/build-tools/
        echo "=== SDK Verification Complete ==="

    # Verify and fix gradlew
    - name: Check and prepare gradlew
      run: |
        cd android_stuff
        echo "Checking gradlew file..."
        ls -la gradlew
        echo "Converting line endings to Unix format..."
        dos2unix gradlew 2>/dev/null || sed -i 's/\r$//' gradlew
        echo "Making gradlew executable..."
        chmod +x gradlew
        echo "Verifying gradlew permissions..."
        ls -la gradlew
        echo "Checking gradlew file type..."
        file gradlew

    # Clear Gradle cache to avoid version conflicts
    - name: Clear Gradle cache
      run: |
        cd android_stuff
        rm -rf ~/.gradle/caches/
        rm -rf .gradle/
        echo "Testing gradlew execution..."
        ./gradlew --version

    # Generate debug keystore for signing
    - name: Generate debug keystore
      run: |
        cd android_stuff/app
        echo "Generating debug keystore..."
        if [ -f debug.keystore ]; then
          echo "Removing existing debug.keystore..."
          rm debug.keystore
        fi
        keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US" -noprompt
        echo "Debug keystore generated successfully"
        ls -la debug.keystore
        echo "Verifying keystore..."
        keytool -list -keystore debug.keystore -storepass android

    # Clean previous builds
    - name: Clean project
      run: |
        cd android_stuff
        ./gradlew clean --stacktrace

    # Build debug APK (easier to install for testing)
    - name: Build Debug APK
      run: |
        cd android_stuff
        ./gradlew assembleDebug --stacktrace

    # Build release APK
    - name: Build Release APK
      run: |
        cd android_stuff
        ./gradlew assembleRelease --stacktrace
        
    # Verify APK signing after build
    - name: Verify APK signatures
      run: |
        cd android_stuff
        echo "=== Verifying Debug APK Signature ==="
        if ls app/build/outputs/apk/debug/*.apk 1> /dev/null 2>&1; then
          jarsigner -verify -verbose -certs app/build/outputs/apk/debug/*.apk
        else
          echo "No debug APK found to verify"
        fi
        echo "=== Verifying Release APK Signature ==="
        if ls app/build/outputs/apk/release/*.apk 1> /dev/null 2>&1; then
          jarsigner -verify -verbose -certs app/build/outputs/apk/release/*.apk
        else
          echo "No release APK found to verify"
        fi

    # Upload Debug APK as artifact (recommended for testing)
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: tetris-game-debug-apk
        path: android_stuff/app/build/outputs/apk/debug/*.apk
        retention-days: 30

    # Upload Release APK as artifact
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: tetris-game-release-apk
        path: android_stuff/app/build/outputs/apk/release/*.apk
        retention-days: 30

    # Create a release (optional - only on main branch)
    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Tetris Game Release v${{ github.run_number }}
        body: |
          ðŸŽ® **VISWA'S CREATION - Tetris Game**
          
          This release contains the latest build of the Tetris game with:
          - Classic Tetris gameplay
          - Touch controls
          - Professional splash screen with animations
          - Scoring system
          
          **Installation:**
          1. Download the APK from the artifacts below
          2. Enable "Unknown Sources" in your Android device settings
          3. Install the APK
          4. Enjoy the game!
          
          **Requirements:**
          - Android 5.0 (API 21) or higher
        files: |
          android_stuff/app/build/outputs/apk/debug/*.apk
          android_stuff/app/build/outputs/apk/release/*.apk
        draft: false
        prerelease: false 